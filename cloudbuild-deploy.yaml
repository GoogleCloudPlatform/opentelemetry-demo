# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
# set the project ID in the k8s manifest for service account/workload identity
- name: ghcr.io/helmfile/helmfile
  id: Generate
  script: |
    #!/usr/bin/env bash
    apk add make
    make generate-kubernetes-manifests HELMFILE_FLAGS="--environment production --state-values-set-string workload_identity_project_id=$PROJECT_ID --state-values-set-string auth_extension_project_id=$PROJECT_ID --state-values-set-string auth_extension_quota_project_id=$PROJECT_ID --state-values-set-string collector_image_repository='us-central1-docker.pkg.dev/${PROJECT_ID}/otel/opentelemetry-collector-contrib' --state-values-set-string collector_image_tag=0.102.0 --state-values-set-string otlp_endpoint=https://us-central1-telemetry.googleapis.com:443"
  env:
  - 'PROJECT_ID=$PROJECT_ID'

# deploy the manifests to the otel-demo namespace in GKE
- name: 'gcr.io/cloud-builders/kubectl'
  id: Deploy
  args:
  - 'apply'
  - '-n'
  - 'otel-demo'
  - '-f'
  - './kubernetes/.'
  env:
  - 'CLOUDSDK_COMPUTE_REGION=${LOCATION}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_GKE_CLUSTER}'
